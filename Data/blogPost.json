[
    {
      
      "question": "What are the different ways to manage a state in a React application?",
      "img": "https://res.cloudinary.com/practicaldev/image/fetch/s--3xXHbMyd--/c_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/i/gedn65jh83oew6hb1391.png",
      "cover_img":"https://www.freecodecamp.org/news/content/images/2022/02/how-to-manage-state-react.png",
      "CATEGORY": "REACT",
      "ans_p_one": "For example, local state would be needed to show or hide a modal component or to track values for a form component, such as form submission, when the form is disabled and the values of a form’s inputs. Global (UI) state – Global state is data we manage across multiple components. Global state is necessary when we want to get and update data anywhere in our app, or in multiple components at least. A common example of global state is authenticated user state. If a user is logged into our app, it is necessary to get and change their data throughout our application. Sometimes state we think should be local might become global etc.",
      "ans_p_two": " URL state is often missing as a category of state, but it is an important one. In many cases, a lot of major parts of our application rely upon accessing URL state. Try to imagine building a blog without being able to fetch a post based off of its slug or id that is located in the URL! There are undoubtedly more pieces of state that we could identify, but these are the major categories worth focusing on for most applications you build."
      
    },
    
    {
      
      "question": "What is a unit test? Why should we write unit tests?",
      "img": "https://i.ytimg.com/vi/lj5nnGa_DIw/maxresdefault.jpg",
      "cover_img":"https://miro.medium.com/max/1280/1*vWjgJkpMrS0iC-Hd666Mfg.png",
      "CATEGORY": "Unit Test",
      "ans_p_one": "Unit testing is a software development process in which the smallest testable parts of an application, called units, are individually and independently scrutinized for proper operation. This testing methodology is done during the development process by the software developers and sometimes QA staff.  The main objective of unit testing is to isolate written code to test and determine if it works as intended.",
      "ans_p_two": "A unit test typically comprises of three stages: plan, cases and scripting and the unit test itself. In the first step, the unit test is prepared and reviewed. The next step is for the test cases and scripts to be made, then the code is tested. Test-driven development requires that developers first write failing unit tests. Then they write code and refactor the application until the test passes. TDD typically results in an explicit and predictable code base."

    },
    {
      
      "question": " React vs. Angular vs. Vue?",
      "img": "https://plainenglish.io/assets/post-content/angular-vs-react-vs-vue-js-which-is-the-best-choice-for-2022.png",
      "cover_img":"https://www.angularminds.com/site_data/static/images/angular-react-vue/comparison-angular-react-vue.png",
      "CATEGORY": "Javascript Framework",
      "ans_p_one": "Undoubtedly, today web applications have become an integral part of everyone's lives. Right from ticket booking to food ordering, cab booking to online shopping, apps are clearly dominating the business world. In fact, technological advancement and mobility have brought about a great change in customer behavior. As the impact of mobility continues to increase and transform industries globally, therefore, businesses are eagerly looking forward to creating an online presence in 2022.",
      "ans_p_two": "Considering the survey report of Stack Overflow, it is somewhere almost similar to NMP Survey, but still, there is a variation to be noticed. React leads the market with 35.9% of developers using it. However, Angular is surpassing the popularity of Vue.js. Angular is being chosen by 25.1% of developers while Vue is utilized by 17.3% of developers."

    },
    {
      
      "question": "How does prototypical inheritance work?",
      "img": "https://www.cronj.com/blog/wp-content/uploads/inheritance.png.webp",
      "cover_img":"https://miro.medium.com/max/1042/1*ULmG2uiAlgQksjj-brp2fw.jpeg",
      "CATEGORY": "Inheritance",
      "ans_p_one": "In programming, we often want to take something and extend it. For instance, we have a user object with its properties and methods, and want to make admin and guest as slightly modified variants of it. We’d like to reuse what we have in user, not copy/reimplement its methods, just build a new object on top of it. Prototypal inheritance is a language feature that helps in that.",
      "ans_p_two": "When we read a property from object, and it’s missing, JavaScript automatically takes it from the prototype. In programming, this is called “prototypal inheritance”. And soon we’ll study many examples of such inheritance, as well as cooler language features built upon it. The property [[Prototype]] is internal and hidden, but there are many ways to set it."

    }
    
  ]